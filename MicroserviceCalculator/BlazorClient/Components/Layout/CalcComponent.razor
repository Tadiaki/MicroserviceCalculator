@using System.Text.Json
@using SharedModels
@using System.Text
@using System.Text.Json.Serialization
@rendermode InteractiveServer
@code {

    public double number1 = 0;
    public double number2 = 0;
    public List<Result> results= new List<Result>();
    public List<Result> fetchedResults = new List<Result>();

    public class Result {
        [JsonPropertyName("id")]
        public int? Id { get; set; }
        [JsonPropertyName("value")]
        public double? Value { get; set; }
        [JsonPropertyName("type")]
        public CalculationType Type { get; set; }
        [JsonPropertyName("calculation")]
        public string Calculation { get; set; }
        [JsonPropertyName("numberOne")]
        public double? NumberOne { get; set; }
        [JsonPropertyName("numberTwo")]
        public double? NumberTwo { get; set; }

    }


    public async Task GetResults()
    {
        try
        {
        var client = new HttpClient();
        var requestmessage = new HttpRequestMessage(HttpMethod.Get, "http://172.18.0.1:9090/calculator/GetHistory");
        var response = await client.SendAsync(requestmessage);
        var respContent = await response.Content.ReadAsStringAsync();
        
            fetchedResults = JsonSerializer.Deserialize<List<Result>>(respContent);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"LOG DIS = {ex.Message}");
        }

    }

    public async Task addnumbers()
    {
        var calcdto = new CalculationRequestDTO();
        calcdto.NumberOne = number1;
        calcdto.NumberTwo = number2;
        calcdto.CalculationType = CalculationType.Addition;

        var client = new HttpClient();
        var requestmessage = new HttpRequestMessage(HttpMethod.Post, "http://172.18.0.1:9090/calculator/createcalculation");
        requestmessage.Content = new StringContent(JsonSerializer.Serialize(calcdto), Encoding.UTF8, "application/json");
        try
        {
        var response = await client.SendAsync(requestmessage);
        var respContent = await response.Content.ReadAsStringAsync();
        Console.WriteLine(respContent);
     
            
            var result = JsonSerializer.Deserialize<Result>(respContent);
            results.Add(result);
        }
        catch(Exception ex)
        {            
            Console.WriteLine($"LOG DIS = {ex.Message}");
        }
    }

    public async Task substractnumbers()
    {
        var calcdto = new CalculationRequestDTO();
        calcdto.NumberOne = number1;
        calcdto.NumberTwo = number2;
        calcdto.CalculationType = CalculationType.Subtraction;

        var client = new HttpClient();
        var requestmessage = new HttpRequestMessage(HttpMethod.Post, "http://172.18.0.1:9090/calculator/createcalculation");
        requestmessage.Content = new StringContent(JsonSerializer.Serialize(calcdto), Encoding.UTF8, "application/json");
        try
        {
        var response = await client.SendAsync(requestmessage);
        var respContent = await response.Content.ReadAsStringAsync();
        

            var result = JsonSerializer.Deserialize<Result>(respContent);
            results.Add(result);
        }
        catch(Exception ex) 
        {
            Console.WriteLine($"LOG DIS = {ex.ToString()}");
        }
    }
}
<div><h3>Calculation Component</h3>
    <label for="num1">Number 1</label>
    <input style="margin-top:10px; padding:2px;" id="num1" type="number" @bind-value="@number1"/><br />
    <label for="num2">Number 2</label>
    <input style="margin-top:10px; padding:2px;" id="num2" type="number" @bind-value="@number2" />
<br />
<div>
<button @onclick="() => addnumbers()">Add</button>
    <button @onclick="() => substractnumbers()">Substract</button>
    </div>
<ul>
@foreach(var res in results)
    {
         <li>@res.Calculation = @res.Value</li>
    }
 </ul>

    <button @onclick="() => GetResults()">GET HISTORY</button>
 HISTORY BENEATH HERE:
    <ul>
        @foreach (var res in fetchedResults)
        {
            <li>@res.Calculation = @res.Value</li>
        }
    </ul>
</div>



